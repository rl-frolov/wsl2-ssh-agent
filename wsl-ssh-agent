#!/bin/bash

AGENT_HOME_DIR="${TMPDIR:-/tmp}/wsl-ssh-agent"
REMOVE_AGENT_HOME_ON_EXIT=true

AGENT_SOCKET="${AGENT_HOME_DIR}/agent.sock"
SOCAT_PIDFILE="${AGENT_HOME_DIR}/socat.pid"
DAEMON_PIDFILE="${AGENT_HOME_DIR}/daemon.pid"
NPIPERELAY_BIN="${HOME}/winhome/.wsl/npiperelay.exe"

usage()
{
    echo "start, stop, status, foreground"
}

is_pid_running() {
    if [[ -z "$1" ]]; then
        return 1
    fi
    kill -0 "$1" 1>/dev/null 2>&1
    return $?
}

init()
{
    mkdir -p "${AGENT_HOME_DIR}"
}

cleanup()
{
    if [ -f "${SOCAT_PIDFILE}" ]; then
        SOCAT_PID=$(cat "${SOCAT_PIDFILE}")
        if is_pid_running ${SOCAT_PID}; then
            kill -SIGTERM ${SOCAT_PID}
        fi
        rm "${SOCAT_PIDFILE}"
    fi
    if [ -f "${DAEMON_PIDFILE}" ]; then
        # Copy-paste first, think later
        DAEMON_PID=$(cat "${DAEMON_PIDFILE}")
        if is_pid_running ${DAEMON_PID}; then
            kill -SIGTERM ${DAEMON_PID}
        fi
        rm "${DAEMON_PIDFILE}"
    fi
    if [ -S "${AGENT_SOCKET}" ]; then
        # search for possible problems with this approach
        rm -f "${AGENT_SOCKET}"
    fi
    if [ $REMOVE_AGENT_HOME_ON_EXIT = true ]; then
        rmdir "${AGENT_HOME_DIR}"
    fi
}

relay()
{
    trap cleanup EXIT
    mkdir -p "${AGENT_HOME_DIR}"
    socat UNIX-LISTEN:"${AGENT_SOCKET}",fork EXEC:"${NPIPERELAY_BIN} -ei -s //./pipe/openssh-ssh-agent" 1>/dev/null 2>&1 &
    SOCAT_PID=$!
    echo "${SOCAT_PID}" > "${SOCAT_PIDFILE}"
    wait "${SOCAT_PID}"
}

main()
{
    case "$1" in
    start)
        init
        start-stop-daemon --start --oknodo --pidfile "${DAEMON_PIDFILE}" --name wsl-ssh-agent-r --make-pidfile --background --startas "$0" -- foreground
        echo "export SSH_AUTH_SOCK=\"${AGENT_SOCKET}\""
        ;;

    stop)
        start-stop-daemon --pidfile "${DAEMON_PIDFILE}" --stop --remove-pidfile
        ;;

    status)
        start-stop-daemon --pidfile "${DAEMON_PIDFILE}" --status
        local result=$?
        case $result in
        0) echo "$0 is running" ;;
        1 | 3) echo "$0 is not running" ;;
        4) echo "$0 unable to determine status" ;;
        esac
        return $result
        ;;

    foreground)
        relay
        ;;

    *)
        usage
        exit 1
        ;;
    esac
}

main $@